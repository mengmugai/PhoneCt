/* Generated by gensyscalls.py. Do not edit. */

#include "private/bionic_asm.h"
ENTRY_PRIVATE(___close)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_close
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(___close)

ENTRY_PRIVATE(_lseek)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_lseek
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_lseek)

ENTRY_PRIVATE(__openat)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_openat
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(__openat)

ENTRY_PRIVATE(_read)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_read
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_read)

ENTRY_PRIVATE(_write)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_write
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_write)

ENTRY_PRIVATE(_ptrace)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_ptrace
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_write)


ENTRY_PRIVATE(_readlinkat)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_readlinkat
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_readlinkat)

ENTRY_PRIVATE(_nanosleep)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_nanosleep
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_nanosleep)

ENTRY_PRIVATE(_inotify_init1)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_inotify_init1
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_inotify_init1)

ENTRY_PRIVATE(_inotify_add_watch)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_inotify_add_watch
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_inotify_add_watch)

ENTRY_PRIVATE(_inotify_rm_watch)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_inotify_rm_watch
    swi     #0
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       ___set_errno_internal
END(_inotify_rm_watch)