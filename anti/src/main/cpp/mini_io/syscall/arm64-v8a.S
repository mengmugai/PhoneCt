/* Generated by gensyscalls.py. Do not edit. */

#include "private/bionic_asm.h"

ENTRY_PRIVATE(___close)
    mov     x8, __NR_close
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(___close)

ENTRY_PRIVATE(_lseek)
    mov     x8, __NR_lseek
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_lseek)

ENTRY_PRIVATE(__openat)
    mov     x8, __NR_openat
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(__openat)

ENTRY_PRIVATE(_read)
    mov     x8, __NR_read
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_read)

ENTRY_PRIVATE(_write)
    mov     x8, __NR_write
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_write)

ENTRY_PRIVATE(_ptrace)
    mov     x8, __NR_ptrace
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_ptrace)


ENTRY_PRIVATE(_readlinkat)
    mov     x8, __NR_readlinkat
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_readlinkat)

ENTRY_PRIVATE(_nanosleep)
    mov     x8, __NR_nanosleep
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_nanosleep)

ENTRY_PRIVATE(_inotify_init1)
    mov     x8, __NR_inotify_init1
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_inotify_init1)

ENTRY_PRIVATE(_inotify_add_watch)
    mov     x8, __NR_inotify_add_watch
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_inotify_add_watch)

ENTRY_PRIVATE(_inotify_rm_watch)
    mov     x8, __NR_inotify_rm_watch
    svc     #0

    cmn     x0, #(MAX_ERRNO + 1)
    cneg    x0, x0, hi
    b.hi    ___set_errno_internal

    ret
END(_inotify_rm_watch)